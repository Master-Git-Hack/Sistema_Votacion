{"version":3,"sources":["Resources/escudo.png","Resources/tec.png","Resources/gto.png","Config/Config.js","Components/AddStudent/AddStudent.jsx","Components/Login/Login.jsx","Components/Home/Home.jsx","Components/NavBar/User/User.jsx","Components/NavBar/NavBar.jsx","Components/UpdateContest/UpdateContest.jsx","Components/ContestRecords/ContestRecords.jsx","Components/AddContest/AddContest.jsx","Components/ParticipantsRecords/ParticipantsRecords.jsx","Components/AddParticipant/AddParticipant.jsx","Components/NavBar/Navigation/Navigation.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","AddStudent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Numero_Control","Nombre","Apellidos","Carrera","Contraseña","errores","status_errorSumary","statusView","handleChange","bind","assertThisInitialized","checkNumero_Control","checkPasswords","checkErrors","viewState","setState","String","length","Number","fecha","Date","getFullYear","substr","Confirmar_Contraseña","window","confirm","listErrors","push","newStudent","e","defineProperty","target","name","value","_this2","Array","usuario","database","ref","once","then","snapshot","val","alert","auth","createUserWithEmailAndPassword","u","set","success","catch","fail","console","log","error","_this3","react_default","a","createElement","className","type","placeholder","onChange","maxLength","minLength","required","defaultValue","onClick","Collapse","in","map","i","key","Components_Login_Login","Component","Login","login","preventDefault","signInWithEmailAndPassword","src","LogoItesg","alt","width","LogoTec","LogoGto","Components_AddStudent_AddStudent","Home","props","user","passVisibility","EventoVotacion","EventoPass","viewPassElement","Fragment","role","aria-label","id","htmlFor","User","Container","Jumbotron","currentUser","email","Table","Row","Col","children","NavBar","Navbar","variant","bg","fixed","expand","Brand","Toggle","aria-controls","Nav","NavDropdown","title","reactjs_popup_es","trigger","modal","Close","NavBar_User_User","Divider","signOut","UpdateContest","Id","Fecha_Inicio","Hora_Inicio","Fecha_Termino","Hora_Termino","Tiempo_Inicio","split","Tiempo_Termino","ContestRecords","updateVisibility","child","remove","Nombre_Votacion","Modal","size","show","onHide","Header","closeButton","Title","Body","Components_UpdateContest_UpdateContest","handleRemove","AddContest","statusPassword","countEvents","Events","Errors","ErrorsSummary","enablePassword","addContest","checkContest","chechErrors","loadContests","on","parseInt","splice","_this$state","toUpperCase","Error","event","Components_ContestRecords_ContestRecords","ParticipantsRecords","Participante","Evento","AddParticipant","uploadValue","valueFile","evento","ImagePath","handleUploadChange","getStudents","getEvents","compareDate","addNewParticipant","checkRecords","eventDate","formDate","nowDate","getMonth","getDate","getRecords","Records","Alias","Participants","Alumno","participant","alumnoVisibility","Votos","_this$setState2","file","files","storage","put","percentage","bytesTransferred","totalBytes","message","_this4","Event","Student","imagenDefault","ProgressBar","animated","striped","now","Record","Components_ParticipantsRecords_ParticipantsRecords","Navigation","homeVisibility","addContestVisibility","addParticipantVisibility","Components_NavBar_NavBar","typeUsr","Components_Home_Home","Components_AddContest_AddContest","Components_AddParticipant_AddParticipant","App","getName","num_ctrl","authListener","onAuthStateChanged","NavBar_Navigation_Navigation","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b5750ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/escudo.febcb7fb.png\";","module.exports = __webpack_public_path__ + \"static/media/tec.23f8d32b.png\";","module.exports = __webpack_public_path__ + \"static/media/gto.b9ad320f.png\";","import firebase from 'firebase';\r\nexport const DB_CONFIG= {\r\n    apiKey: \"AIzaSyDjtRCmTJDKa4q68Si4rbQoR_cZnqzAzNE\",\r\n    authDomain: \"votacion-d595f.firebaseapp.com\",\r\n    databaseURL: \"https://votacion-d595f.firebaseio.com\",\r\n    projectId: \"votacion-d595f\",\r\n    storageBucket: \"votacion-d595f.appspot.com\",\r\n    messagingSenderId: \"309639690507\"\r\n  };\r\nconst fire = firebase.initializeApp(DB_CONFIG);\r\nexport default fire;","import React,{Component} from 'react';\r\nimport fire from './../../Config/Config';\r\nimport Login from './../Login/Login';\r\nimport {Collapse} from 'react-bootstrap';\r\nclass AddStudent extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        /**\r\n         Definicion del estado y las propiedades que tendra la tabla de estudiantes\r\n            -Numero de Control(id,usuario)\r\n            -Nombre\r\n            -Apellidos\r\n            -Carrera\r\n        A su vez se configuran dos variables que ayudaran al proceso de validacion\r\n            errores que es una lista de los errores que el usuario cometa al momento del registro\r\n            status_errorSummary tiene las propiedades de visibilidad para mostrar la lista de errores\r\n         */\r\n         \r\n        this.state={\r\n            Numero_Control:'',\r\n            Nombre:'',\r\n            Apellidos:'',\r\n            Carrera:'Ing. Sistemas Computacionales',\r\n            Contraseña:'',\r\n            errores:[],\r\n            status_errorSumary:false,\r\n            statusView:true\r\n        }\r\n        //asignacion de funciones para no perder el scope\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.checkNumero_Control=this.checkNumero_Control.bind(this);\r\n        this.checkPasswords=this.checkPasswords.bind(this);\r\n        this.checkErrors=this.checkErrors.bind(this);\r\n        this.viewState=this.viewState.bind(this);\r\n    }\r\n\r\n    viewState()\r\n    {\r\n        if(this.state.statusView === true)\r\n            this.setState({statusView:false})\r\n        else\r\n            this.setState({statusView:true})\r\n    }\r\n    /**\r\n     funciones encargadas de validar que los usuarios cumplan con los parametros del registro\r\n     funcion de validacion de numero de control\r\n     */\r\n    checkNumero_Control()\r\n    {   //primero hay que validar que el campo usuario no este vacio\r\n        if(String(this.state.Numero_Control)!=='')\r\n        {   \r\n            if(this.state.Numero_Control.length === 8)\r\n                //segundo comprobamos que el numero de control sea un numero\r\n                if(Number(this.state.Numero_Control))\r\n                {   /**\r\n                    creamos una variable fecha para validar los usuarios activos puedan registrarse\r\n                    obtenemos la fecha en cuatro digitos yyyy y lo casteamos a numero y eliminamos la fecha completa\r\n                        para obtener solo los 2 ultimos digitos yy\r\n                    */\r\n                    var fecha = Number(new Date().getFullYear())-2000;\r\n                    //comprobamos que el numero de control sea mayor al año (yy-5)111000  y menor a (yy)111000\r\n                    if(this.state.Numero_Control>Number((fecha-5)+\"111000\") && this.state.Numero_Control<Number((fecha)+\"111000\"))\r\n                        /**\r\n                        validamos que entre el numero de control tenga los 3 digitos de identificacion de la institucion\r\n                            ejemplo 15111007 -> valido, 15222007 -> invalido\r\n                        */\r\n                        if(String(this.state.Numero_Control).substr(2,3) ==='111')\r\n                            return true;\r\n                        else\r\n                            return false;\r\n                    else\r\n                        return false;\r\n                }\r\n                else\r\n                    return false;\r\n            else\r\n                return false;\r\n        }\r\n        else\r\n            return false;\r\n\r\n    }\r\n    //funcion de validacion del password\r\n    checkPasswords()\r\n    {   /**\r\n        comprobamos que el campo no este vacio,\r\n        dentro de las propiedades de la etiqueta para contraseña\r\n        se definio un tamaño minimo de 8 y maximo de 16 de caracteres\r\n        */\r\n        if(this.state.Contraseña!=='')\r\n            {\r\n                //comprobamos que las contraseñas sean similares\r\n                if(this.state.Contraseña === this.state.Confirmar_Contraseña)\r\n                return true;\r\n            }\r\n        else    \r\n            return false;\r\n    }\r\n    //funcion para enlistar errores\r\n    checkErrors()\r\n    {   /**\r\n            primero le preguntamos al usuario si su informacion es valida\r\n            y que el usuario valide que su informacion es correcta\r\n        */\r\n        if(window.confirm('¿Sus datos estan correctos?'))\r\n        {   //variable array para guardar los errores\r\n            var listErrors =[];\r\n            /**\r\n             validamos cada uno de los campos para el registro\r\n             y agregamos las cadenas con cada uno de los errores encontrados\r\n             */\r\n            if(this.checkNumero_Control() === false)\r\n                listErrors.push('El numero de control no pertenece al sistema')\r\n\r\n            if(String(this.state.Nombre) === '')\r\n                listErrors.push('El nombre no puede estar vacio');\r\n\r\n            if(String(this.state.Apellidos) === '')\r\n                listErrors.push('Los apellidos no pueden estar vacios');\r\n\r\n            if(this.checkPasswords() === false)\r\n                listErrors.push('Las constraseñas deben coincidir');\r\n            //verificamos el tamaño del arreglo para los errores\r\n            if(listErrors.length>0)\r\n                    /**\r\n                     si es mayor a 0, es decir se encontro un arreglo,\r\n                     agregamos el arreglo al estado en la variable errores\r\n                     y cambiamos el atributo de visibilidad para mostrar los errores\r\n                     */\r\n                this.setState({errores:listErrors,status_errorSumary:true});\r\n            else\r\n                //en caso de no tener ningun error en la lista pasamos al registro\r\n               this.newStudent();              \r\n        }\r\n        \r\n    }\r\n    //evento para agregar los cambios a los campos del estado\r\n    handleChange(e)\r\n    { \r\n        /**\r\n         al tener en los campos agregado el mismo nombre que en el estado, es mas sencillo\r\n         agregar cada uno de los estados, ya que lee el campo de name y solo agrega los cambios que \r\n         se producen en cada uno de los campos\r\n         */\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    //funcion para agregar al nuevo usuario\r\n    newStudent()\r\n    {\r\n        //comprobamos que no haya ningun error nuevamente para agregar al nuevo usuario\r\n        if(Array(this.state.errores).length>0)\r\n        {  \r\n            /**\r\n             creamos una variable usuario inicializada en null, aqui validaremos si existe el usuario,\r\n             despues buscamos en la base de datos noSql firebase el valor con una funcion si existe el usuario\r\n             */\r\n            var usuario = null;\r\n            fire.database().ref('Estudiante/'+this.state.Numero_Control).once('value').then(function(snapshot){\r\n                /**\r\n                 si el usuario tiene un valor y un valor con el numero de control, va a cambiar la variable\r\n                 usuario y cambiar el valor inicial de null, asi validaremos su existencia\r\n                 */\r\n                usuario = (snapshot.val() && snapshot.val().Numero_Control);\r\n                //en caso de que el usuario existe mandara un alert para indicar que el usuario existe\r\n                if(usuario !== null)\r\n                    window.alert(\"El usuario ya existe\");\r\n            })\r\n            //en caso de que el usuario siga siendo null agregaremos al usuario\r\n            if(usuario === null)\r\n            {\r\n                //primero agregamos al usuario del login agregando su identidacador + @tecguanajuato.edu.mx\r\n                fire.auth().createUserWithEmailAndPassword(this.state.Numero_Control+'@tecguanajuato.edu.mx',this.state.Contraseña).then((u)=>{\r\n                    /**\r\n                    dentro del mismo campo de creacion de usuario para login validamos que si todo esta bien tambien\r\n                    agrege la siguiente informacion del usuario, sino va a marcar un error.\r\n                    le inficamos que en la tabla estudiante agrege el campo con el id del estudiante\r\n                    y luego su informacion personal\r\n                     */\r\n                    fire.database().ref('Estudiante/' + this.state.Numero_Control).set({\r\n                        //mandamos llamar todos los elementos del estado y los asignamos a variable para la tabla\r\n                        Numero_Control:this.state.Numero_Control,\r\n                        Nombre:this.state.Nombre,\r\n                        Apellidos:this.state.Apellidos,\r\n                        Carrera:this.state.Carrera\r\n                    }).then((success)=>{\r\n                        //en caso de ser exitoso el registro va a mandar un aviso al usuario de que es correcto\r\n                        window.alert('Registro Exitoso')\r\n                    }).catch((fail)=>{\r\n                    console.log(fail);\r\n                    });\r\n                }).catch((error)=>{\r\n                    console.log(error);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n            {this.state.statusView ?\r\n                <div className=\"container\">\r\n                    <div className=\"center jumbotron\">\r\n                        <div className=\"text-center\">\r\n                            <h2>Registro Alumno</h2>\r\n                            <br/>\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                <tr>\r\n                                        <td className=\"text-right\">\r\n                                            <label className=\"text-primary\">Numero de Control:</label>\r\n                                        </td>    \r\n                                        <td>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Numero de Control\" \r\n                                                name=\"Numero_Control\" \r\n                                                onChange={this.handleChange}\r\n                                                maxLength=\"8\"\r\n                                                minLength=\"8\"\r\n                                                required\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-right\">\r\n                                            <label className=\"text-primary\">Nombre(s):</label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Nombre(s)\" \r\n                                                onChange={this.handleChange}\r\n                                                name=\"Nombre\" \r\n                                                required\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-right\">\r\n                                            <label className=\"text-primary\">Apellido(s):</label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Apellido(s)\" \r\n                                                onChange={this.handleChange}\r\n                                                name=\"Apellidos\" \r\n                                                required\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-right\">\r\n                                            <label className=\"text-primary\" >Carrera:</label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <select className=\"form-control\" onChange={this.handleChange} name=\"Carrera\">\r\n                                                <option defaultValue>Ing. Sistemas Computacionales</option>\r\n                                                <option>Ing. Industrias Alimentarias</option>\r\n                                                <option>Ing. Mecatronica</option>\r\n                                                <option>Ing. Industrial</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-right\">\r\n                                            <label className=\"text-primary\">Contraseña:</label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input \r\n                                                type=\"password\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Contraseña\" \r\n                                                name=\"Contraseña\" \r\n                                                minLength=\"8\"\r\n                                                maxLength=\"16\"\r\n                                                onChange={this.handleChange}\r\n                                                required\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-right\">\r\n                                            <label className=\"text-primary\">Confirmar Contraseña:</label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input \r\n                                                type=\"password\" \r\n                                                className=\"form-control\" \r\n                                                placeholder=\"Confirmar Contraseña\" \r\n                                                onChange={this.handleChange}\r\n                                                name=\"Confirmar_Contraseña\" \r\n                                                required\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-left\">\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                className=\"btn btn-danger\"\r\n                                                onClick={this.viewState}\r\n                                            >Cancelar</button>\r\n                                        </td>\r\n                                        <td className=\"text-right\">\r\n                                            <button \r\n                                                type=\"submit\" \r\n                                                className=\"btn btn-success\"\r\n                                                onClick={this.checkErrors}\r\n                                            >Registrar</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                                <Collapse in={this.state.status_errorSumary}>\r\n                                <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <h4 className=\"text-primary\">Errores</h4>\r\n                                        </div>\r\n                                        <div className=\"card-body bg-danger\">\r\n                                                <ol>  \r\n                                                {\r\n                                                    this.state.errores.map((error,i)=>\r\n                                                    {\r\n                                                        return(<li key={i}>{this.state.errores[i]}</li>) \r\n                                                    })\r\n                                                }     \r\n                                                </ol>\r\n                                            </div> \r\n                                    </div>\r\n                                </Collapse>\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n            :<Login/>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddStudent;","import React, { Component } from 'react';\r\nimport fire from '../../Config/Config';\r\nimport AddStudent from '../AddStudent/AddStudent.jsx';\r\nimport LogoItesg from './../../Resources/escudo.png';\r\nimport LogoTec from '../../Resources/tec.png';\r\nimport LogoGto from '../../Resources/gto.png';\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Numero_Control: '',\r\n            Contraseña: '',\r\n            statusView: true\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.viewState = this.viewState.bind(this);\r\n    }\r\n    login(e) {\r\n        e.preventDefault();\r\n        fire.auth().signInWithEmailAndPassword(this.state.Numero_Control + '@tecguanajuato.edu.mx', this.state.Contraseña).then(\r\n            (u) => { }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    viewState() {\r\n        if (this.state.statusView === true)\r\n            this.setState({ statusView: false })\r\n        else\r\n            this.setState({ statusView: true })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.statusView ?\r\n                    <div className=\"container text-center loginSize\">\r\n                        <div className=\"center card\">\r\n                            <div className=\"card-header\">\r\n                                <h2 className=\"text-primary\">Inicio de Sesión</h2>\r\n                                <br />\r\n                                <img src={LogoItesg} alt=\"logo\" width=\"150px\" />\r\n                            </div>\r\n                            <div className=\"card-body jumbotron\">\r\n                                <table className=\"table\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"text-primary text-right\">\r\n                                                Numero de Control:\r\n                                        </td>\r\n                                            <td>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    onChange={this.handleChange}\r\n                                                    name=\"Numero_Control\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Numero de Control\"\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"text-primary text-right\">\r\n                                                Contraseña:\r\n                                        </td>\r\n                                            <td>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    name=\"Contraseña\"\r\n                                                    onChange={this.handleChange}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Contraseña\"\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"btn-container text-center\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={this.login}\r\n                                >Iniciar Sesión\r\n                            </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-link\"\r\n                                    onClick={this.viewState}\r\n                                >Registrar</button>\r\n                            </div>\r\n\r\n                            <div className=\"card-footer\">\r\n                                <img src={LogoTec} alt=\"logo\" className=\"img-responsive\" width=\"100px\" />\r\n                                <img src={LogoGto} alt=\"logo\" className=\"img-responsive\" width=\"100px\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : <AddStudent />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React,{Component} from 'react';\r\nimport NavBar from './../NavBar/NavBar';\r\nclass Home extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state=\r\n        {\r\n            user:this.props.Numero_Control.substr(0,8),\r\n            passVisibility:false,\r\n            EventoVotacion:'',\r\n            EventoPass:''\r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.viewPassElement=this.viewPassElement.bind(this);\r\n    }\r\n    handleChange(e)\r\n    {\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n    viewPassElement()\r\n    {\r\n        if(this.state.passVisibility === true)\r\n            this.setState({passVisibility:false});\r\n        else\r\n            this.setState({passVisibility:true});\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <>\r\n                <div className=\"container text-center\">\r\n                    <div className=\"center jumbotron\">\r\n                        <h2 className=\"text-primary\">Bienvenido:{this.state.user}</h2>\r\n                        <br/>\r\n                        <div className=\"form\">\r\n                            <input \r\n                                type=\"text\" \r\n                                onChange={this.handleChange}\r\n                                name=\"EventoVotacion\" \r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre de Identifiacion de la Votación\"\r\n                            />\r\n                            <br/>\r\n                            {this.state.passVisibility ?\r\n                                <input \r\n                                    type=\"text\" \r\n                                    onChange={this.handleChange}\r\n                                    name=\"EventoPass\" \r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña de acceso en caso de ser necesario para la Votación\"\r\n                                />\r\n                            :null}\r\n                            <br/>\r\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                                <button \r\n                                    type=\"submit\" \r\n                                    className=\"btn btn-success\"\r\n                                    name=\"btn_votar\" \r\n                                    id=\"btn_votar\"\r\n                                >Votar</button>\r\n                                <div className=\"custom-control custom-checkbox btn btn-primary\">\r\n                                    <input type=\"checkbox\" className=\"custom-control-input\" onClick={this.viewPassElement} id=\"defaultUnchecked\"/>\r\n                                    <label className=\"custom-control-label\" htmlFor=\"defaultUnchecked\">Contraseña</label>\r\n                                </div>\r\n                                <button \r\n                                    type=\"submit\" \r\n                                    className=\"btn btn-info\"\r\n                                    name=\"btn_resultados\" \r\n                                    id=\"btn_resultados\"\r\n                                >Resultados</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React,{Component} from 'react';\r\nimport fire from '../../../Config/Config';\r\nimport {Container,Jumbotron,Table,Row,Col} from 'react-bootstrap';\r\nclass User extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        \r\n    }\r\n    render()\r\n    {\r\n        return(\r\n           <Container className=\"text-center\">\r\n               <Jumbotron className=\"center\">\r\n                   <h2>Información Personal: {fire.auth().currentUser.email} </h2> c\r\n                    <br/>\r\n                    <Table>\r\n                        <Row>\r\n                            <Col>Nombre(s):</Col>\r\n                            <Col>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"Nombre\" \r\n                                    placeholder=\"Nombre(s)\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Nombre(s):</Col>\r\n                            <Col>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"Nombre\" \r\n                                    placeholder=\"Nombre(s)\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Nombre(s):</Col>\r\n                            <Col>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"Nombre\" \r\n                                    placeholder=\"Nombre(s)\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Nombre(s):</Col>\r\n                            <Col>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"Nombre\" \r\n                                    placeholder=\"Nombre(s)\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Nombre(s):</Col>\r\n                            <Col>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    name=\"Nombre\" \r\n                                    placeholder=\"Nombre(s)\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {this.props.children}\r\n                        </Row>\r\n                    </Table>\r\n               </Jumbotron>\r\n           </Container>\r\n        );\r\n    }\r\n}\r\nexport default User;","import React,{Component} from 'react';\r\nimport PopUp from 'reactjs-popup';\r\nimport {Navbar,Nav,NavDropdown,Container} from 'react-bootstrap';\r\nimport Home from './../Home/Home';\r\nimport User from './User/User'; \r\nimport fire from './../../Config/Config';\r\n\r\nclass NavBar extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <Navbar variant=\"dark\"bg=\"dark\" fixed=\"top\" expand=\"lg\">\r\n                    <Navbar.Brand>Sistema de Votación</Navbar.Brand>\r\n                    <Navbar.Toggle className=\"btn\" aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            {this.props.children}\r\n                        </Nav>\r\n                        <Nav>\r\n                            <NavDropdown title={this.props.Nombre}  id=\"basic-nav-dropdown\"> \r\n                                <Container className=\"text-center\">\r\n                                    <PopUp\r\n                                        trigger={<button type=\"submit\" className=\"btn btn-info\">Información</button>}\r\n                                        modal\r\n                                        children={Close => \r\n                                        <User>\r\n                                            <button type=\"submit\" onClick={Close} className=\"btn btn-danger\">Cancelar</button>\r\n                                        </User>}\r\n                                    />\r\n                                    <NavDropdown.Divider />\r\n                                    <button \r\n                                        type=\"submit\" \r\n                                        className=\"btn btn-danger\"\r\n                                        onClick={()=>fire.auth().signOut()}    \r\n                                    >Cerrar Sesión</button>\r\n                                </Container>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar><br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NavBar;","import React,{Component} from 'react';\r\n\r\nclass UpdateContest extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state=\r\n        {\r\n            Id:this.props.Id,\r\n            Fecha_Inicio:'',\r\n            Hora_Inicio:'',\r\n            Fecha_Termino:'',\r\n            Hora_Termino:'',\r\n            Contraseña:''\r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        var Tiempo_Inicio = this.props.Fecha_Inicio.split(', ')\r\n        var Tiempo_Termino = this.props.Fecha_Termino.split(', ')\r\n        this.setState({\r\n            Fecha_Inicio:Tiempo_Inicio[0],\r\n            Hora_Inicio:Tiempo_Inicio[1],\r\n            Fecha_Termino:Tiempo_Termino[0],\r\n            Hora_Termino:Tiempo_Termino[1],\r\n            Contraseña:this.props.Contraseña\r\n        })\r\n    }\r\n    handleChange(e)\r\n    {\r\n        this.setState({[e.target.name]:e.target.value})\r\n        console.log(this.state)\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"container text-center\">\r\n                <div className=\"center jumbotron \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 text-right\">\r\n                            Fecha de Inicio\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <div className=\"form-inline\">\r\n                                <input type=\"date\" className=\"form-control\" onChange={this.handleChange} value={this.state.Fecha_Inicio} name=\"Fecha_Inicio\" id=\"\"/>\r\n                                <input type=\"time\" className=\"form-control\" onChange={this.handleChange} value={this.state.Hora_Inicio} name=\"Hora_Inicio\" id=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 text-right\">\r\n                        Fecha de Termino\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <div className=\"form-inline\">\r\n                                <input type=\"date\" className=\"form-control\" onChange={this.handleChange} value={this.state.Fecha_Termino} name=\"Fecha_Termino\" id=\"\"/>\r\n                                <input type=\"time\" className=\"form-control\" onChange={this.handleChange} value={this.state.Hora_Termino} name=\"Hora_Termino\" id=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 text-right\">\r\n                            Contraseña\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.Contraseña} onChange={this.handleChange} name=\"Contraseña\" id=\"\"/>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-right\">\r\n                            <button type=\"submit\" className=\"btn btn-success\">Guardar Cambios</button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default UpdateContest;","import React, {Component} from 'react';\r\nimport fire from '../../Config/Config';\r\nimport {Modal, ModalTitle} from 'react-bootstrap';\r\nimport UpdateContest from './../UpdateContest/UpdateContest';\r\nclass ContestRecords extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state=\r\n        {\r\n            updateVisibility:false\r\n        }\r\n\r\n    }\r\n\r\n    handleRemove()\r\n    {\r\n        if(window.confirm('¿Esta seguro de que quiere eliminar este registro?'))\r\n            fire.database().ref('Evento').child(this.props.Id).remove();\r\n    }\r\n    render()\r\n    {\r\n        return(<>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <p>{this.props.Nombre_Votacion}</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <p>{this.props.Fecha_Inicio}</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <p>{this.props.Fecha_Termino}</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <p>{this.props.Contraseña}</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <p>{this.props.Carrera}</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"btn-group mr-2\">\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"btn btn-warning\"\r\n                            onClick={()=> this.state.updateVisibility ? this.setState({updateVisibility:false}) : this.setState({updateVisibility:true})}\r\n                        >Editar</button>\r\n                        <Modal size=\"lg\" show={this.state.updateVisibility} onHide={()=>this.setState({updateVisibility:false})}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Actualizar Contenido: {this.props.Nombre_Votacion}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <UpdateContest\r\n                                    Id={this.props.Id}\r\n                                    Fecha_Inicio={this.props.Fecha_Inicio}\r\n                                    Fecha_Termino={this.props.Fecha_Termino}\r\n                                    Carrera={this.props.Carrera}\r\n                                    Contraseña={this.props.Contraseña}\r\n                                />\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"btn-group mr-2\">\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"btn btn-danger\"\r\n                            onClick={()=>this.handleRemove()}\r\n                        >Eliminar</button>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n            <br/>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default ContestRecords;","import React,{Component} from 'react';\r\nimport fire from './../../Config/Config';\r\nimport ContestRecords from './../ContestRecords/ContestRecords';\r\nimport {Collapse} from 'react-bootstrap'\r\nclass AddContest extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n            Nombre_Votacion:'',\r\n            Carrera:'General',\r\n            Fecha_Inicio:'',\r\n            Hora_Inicio:'',\r\n            Fecha_Termino:'',\r\n            Hora_Termino:'',\r\n            Contraseña:'',\r\n            statusPassword:false,\r\n            countEvents:0,\r\n            Events:[],\r\n            Errors:[],\r\n            ErrorsSummary:false\r\n        }\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.enablePassword=this.enablePassword.bind(this);\r\n        this.addContest=this.addContest.bind(this);\r\n        this.checkContest=this.checkContest.bind(this);\r\n        this.checkErrors=this.chechErrors.bind(this);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        this.loadContests();\r\n    }\r\n    enablePassword(e)\r\n    {\r\n        if(this.state.statusPassword === true)\r\n            this.setState({statusPassword:false,Contraseña:''});\r\n        else\r\n            this.setState({statusPassword:true});\r\n    }\r\n    handleChange(e)\r\n    { \r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n    loadContests()\r\n    {\r\n        let {Events} = this.state;\r\n        fire.database().ref().child('Evento').on('child_added',snapshot=>{\r\n            Events.push({\r\n                Id:parseInt(snapshot.key),\r\n                Nombre_Votacion:snapshot.val().Nombre_Votacion,\r\n                Carrera:snapshot.val().Carrera,\r\n                Fecha_Inicio:snapshot.val().Fecha_Inicio,\r\n                Hora_Inicio:snapshot.val().Hora_Inicio,\r\n                Fecha_Termino:snapshot.val().Fecha_Termino,\r\n                Hora_Termino:snapshot.val().Hora_Termino,\r\n                Contraseña:snapshot.val().Contraseña\r\n            })\r\n        })\r\n        this.setState({Events});\r\n        \r\n        fire.database().ref().child('Evento').on('child_removed',snapshot=>{\r\n            for(let i=0;i<Events.length;i++)\r\n                if(Events[i].Id === snapshot.key)\r\n                    Events.splice(i,1)\r\n            this.setState({Events})\r\n        })\r\n        \r\n    }\r\n    chechErrors()\r\n    {\r\n        var Errors=[];\r\n        if(this.state.Nombre_Votacion === '')\r\n            Errors.push(\"El Nombre del evento no puede qudar vacio.\")\r\n        else if (this.checkContest())\r\n            Errors.push(\"No puedes repetir el nombre del evento\")\r\n        if(this.state.Fecha_Inicio ==='')\r\n            Errors.push(\"El Fecha de Inicio del evento no puede qudar vacio.\")\r\n        if(this.state.Hora_Inicio === '')\r\n            Errors.push(\"El Hora de Inicio del evento no puede qudar vacio.\")\r\n        if(this.state.Fecha_Termino ==='')\r\n            Errors.push(\"El Fecha de Termino del evento no puede qudar vacio.\")\r\n        if(this.state.Hora_Termino === '')\r\n            Errors.push(\"El Hora de Termino del evento no puede qudar vacio.\")\r\n        if(this.state.Fecha_Termino<this.state.Fecha_Inicio)\r\n            Errors.push(\"El Fecha de Termino no puede ser menor a la Fecha de Inicio del evento.\")\r\n        if(this.state.Fecha_Inicio === this.state.Fecha_Termino)\r\n            if(this.state.Hora_Inicio === this.state.Hora_Termino || this.state.Hora_Termino < this.state.Hora_Inicio)\r\n                Errors.push(\"Debe haber una diferencia de tiempo para poder realizar el evento.\")\r\n        if(this.state.statusPassword === true)\r\n            if(this.state.Contraseña === '')\r\n                Errors.push(\"Si habilita la opcion de Contraseña esta no puede quedar vacia.\")\r\n        if(Errors.length>0)\r\n        {\r\n            this.setState({Errors,ErrorsSummary:true})\r\n            return false\r\n        }\r\n            \r\n        else\r\n        {\r\n            this.setState({Errors,ErrorsSummary:false})\r\n            return true\r\n        }\r\n            \r\n    }\r\n    checkContest()\r\n    {\r\n        const {Events,Nombre_Votacion} = this.state;\r\n        for(let i=0;i<Events.length;i++)\r\n        {    var NombreR = String(Events[i].Nombre_Votacion).toUpperCase();\r\n            if(NombreR === Nombre_Votacion.toUpperCase())\r\n                return true;  \r\n            else\r\n                return false\r\n        }\r\n    }\r\n    addContest()\r\n    {\r\n        if(window.confirm('¿Los datos son correctos?'))\r\n        {\r\n            if(this.chechErrors())\r\n            {\r\n               fire.database().ref('Evento/'+(this.state.Events.length+1)).set({\r\n                    Nombre_Votacion:this.state.Nombre_Votacion,\r\n                    Carrera:this.state.Carrera,\r\n                    Fecha_Inicio:this.state.Fecha_Inicio,\r\n                    Hora_Inicio:this.state.Hora_Inicio,\r\n                    Fecha_Termino:this.state.Fecha_Termino,\r\n                    Hora_Termino:this.state.Hora_Termino,\r\n                    Contraseña:this.state.Contraseña\r\n                }).then((success)=>{\r\n                    window.alert(\"Registro Exitoso\")\r\n                }).catch((fail)=>{\r\n                    window.alert(fail);\r\n                });\r\n            }  \r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <>\r\n            <div className=\"container text-center\">\r\n                <div className=\"jumbotron\">\r\n                    <h2 className=\"text-primary\">Registro de Evento de Votación</h2>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"text-right\">\r\n                                    Nombre de Votación\r\n                                </td>\r\n                                <td>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleChange}\r\n                                        name=\"Nombre_Votacion\" \r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"text-right\">Duracion</td>\r\n                                <td>\r\n                                    <div className=\"form-inline\" >\r\n                                        <div>\r\n                                            <input \r\n                                                type=\"date\" \r\n                                                className=\"form-control\" \r\n                                                onChange={this.handleChange}\r\n                                                name=\"Fecha_Inicio\"\r\n                                            />\r\n                                            <input \r\n                                                type=\"time\" \r\n                                                className=\"form-control\" \r\n                                                onChange={this.handleChange}\r\n                                                name=\"Hora_Inicio\"\r\n                                            />\r\n                                            <p className=\"form-text\">Inicio del periodo de la votación</p>\r\n                                        </div>\r\n                                        \r\n                                        <div>\r\n                                            <input \r\n                                                type=\"date\" \r\n                                                className=\"form-control\" \r\n                                                onChange={this.handleChange}\r\n                                                name=\"Fecha_Termino\" \r\n                                            />\r\n                                            <input \r\n                                                type=\"time\" \r\n                                                className=\"form-control\" \r\n                                                onChange={this.handleChange}\r\n                                                name=\"Hora_Termino\" \r\n                                            />\r\n                                            <p className=\"form-text\">Fin del periodo de la votación</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"text-right\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" value={this.state.statusPassword} onClick={this.enablePassword} name=\"enableContraseña\" id=\"enableContraseña\" />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"enableContraseña\">Contraseña</label>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    {this.state.statusPassword ?\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        name=\"Contraseña\" \r\n                                        placeholder=\"Contraseña\"\r\n                                        onChange={this.handleChange}\r\n                                        className=\"form-control\"\r\n                                    />:null\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"text-right\">Carrera</td>\r\n                                <td>\r\n                                    <select className=\"form-control\" name=\"Carrera\" onChange={this.handleChange}>\r\n                                        <option>General</option>\r\n                                        <option>Ing. Sistemas Computacionales</option>\r\n                                        <option>Ing. Industrias Alimentarias</option>\r\n                                        <option>Ing. Mecatronica</option>\r\n                                        <option>Ing. Industrial</option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"text-left\">\r\n                                    \r\n                                </td>\r\n                                <td className=\"text-right\">\r\n                                    <button type=\"submit\" onClick={this.addContest} className=\"btn btn-success\">Guardar</button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br/>\r\n                    <Collapse in={this.state.ErrorsSummary}>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h2>Lista de Errores</h2>\r\n                            </div>\r\n                            <div className=\"card-body bg-danger\">\r\n                                    <ul>\r\n                                        {this.state.Errors.map((Error,i)=>{\r\n                                            return (<li key={i}>{Error}</li>)\r\n                                        })}\r\n                                    </ul>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                    \r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"container text-center\">\r\n                <div className=\"center jumbotron\">\r\n                    <div className=\"table\">\r\n                        <div className=\"row bg-dark text-light\">\r\n                            <div className=\"col\">\r\n                                <p>Nombre Votación</p>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p>Fecha Inicio</p>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p>Fecha Termino</p>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p>Contraseña</p>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p>Carrera</p>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        {this.state.Events.map(event=>\r\n                        {\r\n                            return(\r\n                                <ContestRecords\r\n                                    key={event.Id}\r\n                                    Id={event.Id}\r\n                                    Nombre_Votacion={event.Nombre_Votacion}\r\n                                    Fecha_Inicio={event.Fecha_Inicio+', '+event.Hora_Inicio}\r\n                                    Fecha_Termino={event.Fecha_Termino+', '+event.Hora_Termino}\r\n                                    Contraseña={event.Contraseña}\r\n                                    Carrera={event.Carrera}\r\n                                />\r\n                                \r\n                            )\r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\nexport default AddContest;","import React,{Component} from 'react';\r\n\r\nclass ParticipantsRecords extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n    render()\r\n    {\r\n        return(<>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    {this.props.Participante}\r\n                </div> \r\n                <div className=\"col-4\">\r\n                    {this.props.Evento}\r\n                </div> \r\n                <div className=\"col-4\">\r\n                    <div className=\"btn-group mr-2\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\">Editar</button>\r\n                    </div>\r\n                    <div className=\"btn-group mr-2\">\r\n                        <button type=\"submit\" className=\"btn btn-danger\">Eliminar</button>\r\n                    </div>\r\n                    \r\n                </div> \r\n            </div>\r\n            <br/>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default ParticipantsRecords;","import React, {Component} from 'react';\r\nimport fire from './../../Config/Config';\r\nimport {ProgressBar} from 'react-bootstrap';\r\nimport ParticipantsRecords from './../ParticipantsRecords/ParticipantsRecords';\r\nclass AddParticipant extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state=\r\n        {\r\n            uploadValue:0,\r\n            valueFile:'Examinar',\r\n            Participante:'',\r\n            Carrera:'General',\r\n            evento:'',\r\n            ImagePath:'',\r\n            Participante:'',\r\n            alumnoVisibility:false,\r\n            imagenDefault:false,\r\n            Events:[],\r\n            Alumno:'',\r\n            Records:[],\r\n            Participants:[]\r\n        }\r\n        this.handleUploadChange=this.handleUploadChange.bind(this);\r\n        this.getStudents=this.getStudents.bind(this);\r\n        this.getEvents=this.getEvents.bind(this);\r\n        this.compareDate=this.compareDate.bind(this);\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.addNewParticipant=this.addNewParticipant.bind(this);\r\n        this.checkRecords=this.checkRecords.bind(this);\r\n    }\r\n    compareDate(eventDate)\r\n    {\r\n        var formDate = new Date(eventDate)\r\n        var nowDate = new Date();\r\n        if(formDate.getFullYear()=== nowDate.getFullYear()-1 || formDate.getFullYear()=== nowDate.getFullYear())\r\n            if((formDate.getMonth()+1)<=(nowDate.getMonth()+1))\r\n                if(nowDate.getDate()<(formDate.getDate()+1))\r\n                    return true;\r\n                else return false;\r\n            else return false;\r\n        else return false;\r\n    }\r\n    handleChange(e)\r\n    {\r\n        this.setState({[e.target.name]:e.target.value})\r\n        \r\n    }\r\n    componentDidMount()\r\n    {\r\n        this.getEvents();\r\n        this.getRecords();\r\n    }\r\n    getRecords()\r\n    {\r\n        let {Records} =this.state;\r\n        fire.database().ref().child('Participantes').on('child_added',snapshot=>{\r\n            Records.push({\r\n                Id:snapshot.key,\r\n                Participante:snapshot.val().Participante,\r\n                Alias:snapshot.val().Alias,\r\n                Evento:snapshot.val().Evento\r\n            })\r\n        })\r\n        this.setState({Records})\r\n    }\r\n    getEvents()\r\n    {\r\n        const {Events} =this.state;\r\n        fire.database().ref().child('Evento').on('child_added',snapshot=>{\r\n            //this.compareDate(snapshot.val().Fecha_Inicio)\r\n           if(this.compareDate(snapshot.val().Fecha_Inicio))\r\n                Events.push({\r\n                    key:snapshot.key,\r\n                    Nombre_Votacion:snapshot.val().Nombre_Votacion,\r\n                    Carrera:snapshot.val().Carrera\r\n                })\r\n        })\r\n       this.setState({Events});\r\n    }\r\n    getStudents()\r\n    {\r\n        var Participants = [];\r\n        const {Carrera} = this.state;\r\n        fire.database().ref().child('Estudiante').on('child_added',snapshot=>{\r\n                if(Carrera === 'General' || snapshot.val().Carrera === Carrera)\r\n                    Participants.push({\r\n                        Numero_Control:snapshot.val().Numero_Control,\r\n                        Nombre:snapshot.val().Nombre,\r\n                        Carrera:snapshot.val().Carrera\r\n                    })\r\n        })\r\n        this.setState({Participants})\r\n    }\r\n    checkRecords()\r\n    {\r\n        const {Records} = this.state;\r\n        for(let i=0;i<Records.length;i++)\r\n            if(this.state.evento === Records[i].Evento)\r\n                if(this.state.Alumno === Records[i].Participante || this.state.Participante === Records[i].Participante)\r\n                    return false;\r\n                else\r\n                    return true;\r\n            else\r\n                return true;\r\n                \r\n    }\r\n    addNewParticipant()\r\n    {\r\n        var participant=(this.state.alumnoVisibility?this.state.Alumno:this.state.Participante);\r\n        if(this.checkRecords())\r\n       fire.database().ref('Participantes/'+(this.state.Records.length+1)).set(\r\n        {\r\n            Participante:participant,\r\n            Evento:this.state.evento,\r\n            ImagePath:this.state.ImagePath,\r\n            Votos:0 \r\n        }\r\n        ).then((success)=>{\r\n            window.alert(\"Nuevo participante agregado\")\r\n        }).catch((fail)=>{\r\n            console.log(fail);\r\n        })\r\n    }\r\n    handleUploadChange(e)\r\n    {\r\n        const file = e.target.files[0];\r\n        this.setState({\r\n            [e.target.name]:file.name,\r\n            ImagePath:'Imagenes/'+(this.state.alumnoVisibility ? this.state.Alumno : this.state.Participante)\r\n        });\r\n        const storageRef = fire.storage().ref('Imagenes/'+(this.state.alumnoVisibility ? this.state.Alumno : this.state.Participante));\r\n        const task = storageRef.put(file);\r\n        task.on('state_changed',snapshot=>{\r\n            let percentage =(snapshot.bytesTransferred/snapshot.totalBytes)*100;\r\n            this.setState({uploadValue:percentage})\r\n        },error => {\r\n            console.log(error.name, error.message)\r\n        },()=>{\r\n            this.setState({uploadValue:100})\r\n        });\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"container text-center\">\r\n                <div className=\"center jumbotron\">\r\n                    <h2 className=\"text-primary\">Registro de Participante(s)</h2>\r\n                    <br/>\r\n                    <div className=\"container\">\r\n                        <div className=\"table\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 text-right\">\r\n                                    Referencia de Votación\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    <select className=\"form-control\" name=\"evento\" onClick={this.handleChange} id=\"\">\r\n                                        {this.state.Events.map(Event=>{\r\n                                            return(\r\n                                                <option key={Event.key} value={Event.Nombre_Votacion}>{Event.Nombre_Votacion} - ({Event.Carrera})</option>\r\n                                            )\r\n                                        })}\r\n                                        \r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 text-right\">\r\n                                <div className=\"custom-control custom-checkbox\">\r\n                                            <input \r\n                                                type=\"checkbox\" \r\n                                                name=\"\"\r\n                                                id=\"ckb_alumno\"\r\n                                                className=\"custom-control-input\" \r\n                                                onClick=\r\n                                                {\r\n                                                    ()=>this.state.alumnoVisibility ? this.setState({alumnoVisibility:false}) : this.setState({alumnoVisibility:true})\r\n                                                } \r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"ckb_alumno\">Alumno</label>\r\n                                        </div>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    {this.state.alumnoVisibility ?\r\n                                    <>\r\n                                    <select className=\"form-control\" onChange={this.handleChange} onClick={this.getStudents} name=\"Carrera\">\r\n                                        <option value=\"General\">General</option>\r\n                                        <option value=\"Ing. Sistemas Computacionales\">Ing. Sistemas Computacionales</option>\r\n                                        <option value=\"Ing. Industrias Alimentarias\">Ing. Industrias Alimentarias</option>\r\n                                        <option value=\"Ing. Mecatronica\">Ing. Mecatronica</option>\r\n                                        <option value=\"Ing. Industrial\">Ing. Industrial</option>\r\n                                    </select>\r\n                                    <select className=\"form-control\"  onClick={this.handleChange} name=\"Alumno\">\r\n                                        {this.state.Participants.map(Student =>{\r\n                                            \r\n                                            return(\r\n                                                <option value={Student.Numero_Control} key={Student.Numero_Control}>({Student.Carrera}) - {Student.Numero_Control} - \"{Student.Nombre}\"</option>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                                    </select>\r\n                                    </>\r\n                                    :\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Nombre del Paricpante o Elemento\"\r\n                                        name=\"Participante\" \r\n                                        onChange={this.handleChange}\r\n                                    />}\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 text-right\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input \r\n                                            type=\"checkbox\" \r\n                                            className=\"custom-control-input\" \r\n                                            id=\"ckb_imagen\"\r\n                                            name=\"\"\r\n                                            onClick=\r\n                                            {\r\n                                                ()=>this.state.imagenDefault ? this.setState({imagenDefault:false}): this.setState({imagenDefault:true})\r\n                                            }\r\n                                        />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"ckb_imagen\">Imagen</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-9\">\r\n                                    {this.state.imagenDefault ?\r\n                                    <div className=\"custom-file\">\r\n                                        <input type=\"file\" className=\"btn custom-file-input\" onChange={this.handleUploadChange} name=\"valueFile\" id=\"valueFile\"/>\r\n                                        <label className=\"custom-file-label\" htmlFor=\"valueFile\">{this.state.valueFile}</label>\r\n                                        <ProgressBar animated striped variant=\"info\" now={this.state.uploadValue}/>\r\n                                     </div>\r\n                                    :null}\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 text-right\">\r\n                                    <button type=\"submit\" onClick={this.addNewParticipant} className=\"btn btn-success\">Guardar</button>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"center jumbotron\">\r\n                    <div className=\"table\">\r\n                        <div className=\"row bg-dark text-light\">\r\n                            <div className=\"col-4\">\r\n                                Participante\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                Evento\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        {this.state.Records.map(Record=>{\r\n                            return (\r\n                                <ParticipantsRecords\r\n                                    key={Record.Id}\r\n                                    Id={Record.Id}\r\n                                    Participante={Record.Participante}\r\n                                    Evento={Record.Evento}\r\n                                />\r\n                            )\r\n                        })\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default AddParticipant;","import React, { Component } from 'react';\r\nimport NavBar from './../NavBar';\r\nimport Home from './../../Home/Home';\r\nimport AddContest from './../../AddContest/AddContest';\r\nimport AddParticipant from './../../AddParticipant/AddParticipant';\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n            {\r\n                user: this.props.Numero_Control.substr(0, 8),\r\n                homeVisibility: true,\r\n                addContestVisibility: false,\r\n                addParticipantVisibility: false\r\n            }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavBar Nombre={this.props.Nombre}>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn nav-link text-light\"\r\n                        onClick={() =>\r\n                            this.setState({\r\n                                homeVisibility: true,\r\n                                addContestVisibility: false,\r\n                                addParticipantVisibility: false\r\n                            })\r\n\r\n                        }\r\n                    >Home</button>\r\n                    {this.props.typeUsr ? <>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn nav-link text-light\"\r\n                            onClick={() =>\r\n                                this.setState({\r\n                                    homeVisibility: false,\r\n                                    addContestVisibility: true,\r\n                                    addParticipantVisibility: false\r\n                                })\r\n                            }\r\n                        >Add Contest</button>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn nav-link text-light\"\r\n                            onClick={() =>\r\n                                this.setState({\r\n                                    homeVisibility: false,\r\n                                    addContestVisibility: false,\r\n                                    addParticipantVisibility: true\r\n                                })\r\n                            }\r\n                        >Add Participant</button>\r\n                    </> : null}\r\n                </NavBar>\r\n\r\n                {\r\n                    this.state.homeVisibility ?\r\n                        <Home Numero_Control={this.state.user} /> :\r\n                        this.state.addContestVisibility ?\r\n                            <AddContest /> :\r\n                            this.state.addParticipantVisibility ?\r\n                                <AddParticipant /> :\r\n                                <Home Numero_Control={this.state.user} />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Navigation;","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './Config/Config';\nimport Login from './Components/Login/Login';\nimport Navigation from './Components/NavBar/Navigation/Navigation';\n\nclass App extends Component {\n  constructor()\n  {\n    super();\n    this.state=\n    {\n      user:'',\n      Nombre:'',\n      typeUsr:false\n    }\n    this.getName=this.getName.bind(this);\n  }\n  getName()\n  {\n      var num_ctrl=fire.auth().currentUser.email\n      fire.database().ref('Estudiante/'+num_ctrl.substr(0,8)).on(\"value\",snapshot=>{\n        this.setState({Nombre:snapshot.val().Nombre});\n      })\n  }\n  componentDidMount()\n  {\n    this.authListener();\n  }\n  authListener()\n  {\n    fire.auth().onAuthStateChanged((user)=>\n    {\n      if(user)\n         {\n          this.setState({user});\n          if(fire.auth().currentUser.email.substr(0,8)!== \"superusr\") \n            this.getName();\n          else\n             this.setState({Nombre:\"SuperUser\",typeUsr:true});\n         }\n      else\n        this.setState({user:null});\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.user ? <Navigation Numero_Control={fire.auth().currentUser.email} Nombre={this.state.Nombre} typeUsr={this.state.typeUsr}/> : <Login/>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}